<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Company Management | Admin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Joan&display=swap" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <%- include('../partials/sidebar', { path: '/admin/company' }) %>
    
    <div class="ml-64 p-8">
        <div class="bg-white p-6 rounded-lg shadow-md">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-2xl font-bold text-gray-700">Company Management</h2>
                <button onclick="openModal()" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">Add Company</button>
            </div>
            
            <input type="text" id="searchCompany" placeholder="Search companies..." class="w-1/3 px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 mb-4">
            
            <div class="overflow-x-auto">
                <table class="w-full border-collapse border border-gray-300 bg-white shadow-sm">
                    <thead class="bg-gray-200">
                        <tr>
                            <th class="border px-4 py-2">#</th>
                            <th class="border px-4 py-2">Company Name</th>
                            <th class="border px-4 py-2">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% companies.forEach((company, index) => { %>
                            <tr>
                                <td class="border px-4 py-2"><%= index + 1 %></td>
                                <td class="border px-4 py-2"><%= company.name %></td>
                                <td class="border px-4 py-2 flex space-x-2">
                                    <button onclick="editCompany('<%= company._id %>')" class="px-3 py-1 bg-yellow-500 text-white rounded-md hover:bg-yellow-600">Edit</button>
                                    <button onclick="hideCompany('<%= company._id %>')" class="px-3 py-1 bg-gray-500 text-white rounded-md hover:bg-gray-600">Hide</button>
                                </td>
                            </tr> 
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div id="companyModal" class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center hidden">
        <div class="bg-white p-6 rounded-lg shadow-lg w-1/3">
            <h2 class="text-xl font-bold text-gray-700 mb-4">Add New Company</h2>
            
            <label class="block text-gray-600 mb-2">Company Name</label>
            <input type="text" id="companyName" class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 mb-4" placeholder="Enter company name">

            <div class="flex justify-end space-x-2">
                <button onclick="closeModal()" class="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600">Cancel</button>
                <button onclick="saveCompany()" class="px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600">Save</button>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="editCompanyModal" class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center hidden z-50">
        <div class="bg-white p-6 rounded-lg shadow-lg w-1/3">
            <h2 class="text-xl font-bold text-gray-700 mb-4">Edit Company</h2>

            <label class="block text-gray-600 mb-2">Company Name</label>
            <input type="text" id="editCompanyName" class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 mb-4" placeholder="Enter new company name">

            <input type="hidden" id="editCompanyId">

            <div class="flex justify-end space-x-2">
                <button onclick="closeEditModal()" class="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600">Cancel</button>
                <button onclick="updateCompany()" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">Update</button>
            </div>
        </div>
    </div>

    <script>
        function openModal() {
            document.getElementById("companyModal").classList.remove("hidden");
            document.getElementById("companyName").value = "";
        }

        function closeModal() {
            document.getElementById("companyModal").classList.add("hidden");
        }

        function saveCompany() {
            const nameInput = document.getElementById("companyName");
            if (!nameInput) return Swal.fire("Error", "Company name input not found.", "error");

            const name = nameInput.value.trim();
            if (!name) return Swal.fire("Warning", "Company name cannot be empty!", "warning");
            if (!/^[A-Za-z]+$/.test(name)) return Swal.fire("Warning", "Company name can only contain alphabets.", "warning");
            if (name.length > 10) return Swal.fire("Warning", "Company name must not exceed 10 characters.", "warning");

            const formattedName = name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();

            fetch("/admin/add-company", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ companyName: formattedName, isActive: true })
            })
            .then(response => response.json().catch(() => null))
            .then(data => {
                if (!data || !data.success) throw new Error(data?.message || "Unexpected error occurred");
                Swal.fire("Success", "Company added successfully!", "success").then(() => {
                    closeModal();
                    window.location.reload();
                });
            })
            .catch(error => Swal.fire("Error", "Failed to add company: " + error.message, "error"));
        }

        function hideCompany(companyId) {
            Swal.fire({
                title: "Are you sure?",
                text: "This company will be hidden.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, hide it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/hide-company/${companyId}`, { 
                        method: "PATCH",
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire("Hidden!", data.message, "success").then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire("Error", data.message || "Failed to hide company", "error");
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire("Error", "Error hiding company", "error");
                    });
                }
            });
        }

        function editCompany(id) {
            fetch(`/admin/company/${id}`)
                .then(res => res.json())
                .then(data => {
                    if (data.success && data.company) {
                        document.getElementById("editCompanyId").value = data.company._id;
                        document.getElementById("editCompanyName").value = data.company.name;
                        document.getElementById("editCompanyModal").classList.remove("hidden");
                    } else {
                        Swal.fire("Error", data.message || "Failed to load company", "error");
                    }
                })
                .catch(err => {
                    console.error("Error:", err);
                    Swal.fire("Error", "Something went wrong", "error");
                });
        }

        function closeEditModal() {
            document.getElementById("editCompanyModal").classList.add("hidden");
        }

        function updateCompany() {
            const id = document.getElementById("editCompanyId").value;
            const name = document.getElementById("editCompanyName").value.trim();

            if (!name) return Swal.fire("Warning", "Company name cannot be empty!", "warning");
            if (!/^[A-Za-z]+$/.test(name)) return Swal.fire("Warning", "Only alphabets allowed", "warning");
            if (name.length > 10) return Swal.fire("Warning", "Max 10 characters allowed", "warning");

            const formattedName = name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();

            fetch(`/admin/edit-company/${id}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ companyName: formattedName })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    Swal.fire("Success", "Company updated!", "success").then(() => {
                        closeEditModal();
                        window.location.reload();
                    });
                } else {
                    Swal.fire("Error", data.message || "Failed to update", "error");
                }
            })
            .catch(err => {
                console.error("Update error:", err);
                Swal.fire("Error", "Something went wrong", "error");
            });
        }
    </script>
</body>
</html>
