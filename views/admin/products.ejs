
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Product Management</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet"/>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-black text-white font-sans">
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <aside class="w-64 bg-zinc-900 p-5 shadow-lg flex flex-col">
      <div class="flex items-center justify-center mb-8">
        <h1 class="text-white font-bold text-2xl">ELITECART</h1>
      </div>
      <nav class="space-y-4">
        <a href="/admin/dashboard" class="block text-gray-400 hover:text-white px-4 py-2 rounded-lg transition">Dashboard</a>
      </nav>
    </aside>

    <!-- Main content -->
    <main class="flex-1 p-10">
      <div class="flex items-center justify-between mb-6">
        <h1 class="text-3xl font-bold text-white">Products</h1>
        <form action="/admin/products" method="GET" class="relative">
          <input name="search" type="text" placeholder="Search" class="px-4 py-2 rounded-lg border-none focus:ring-2 focus:ring-blue-500 text-black">
          <button type="submit">
            <svg class="absolute right-3 top-2.5 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-4.35-4.35M16.65 16.65A7.5 7.5 0 1116.65 2.1a7.5 7.5 0 010 14.55z"></path>
            </svg>
          </button>
        </form>
      </div>

      <!-- Product Table -->
      <div class="overflow-hidden rounded-xl shadow-lg border border-gray-700">
        <table class="min-w-full divide-y divide-gray-700">
          <thead class="bg-gray-800">
            <tr>
              <th class="px-6 py-4 text-left text-sm font-semibold">Product</th>
              <th class="px-6 py-4 text-left text-sm font-semibold">Price</th>
              <th class="px-6 py-4 text-left text-sm font-semibold">Stock</th>
              <th class="px-6 py-4 text-left text-sm font-semibold">Category</th>
              <th class="px-6 py-4 text-left text-sm font-semibold">Action</th>
            </tr>
          </thead>
          <tbody class="bg-black divide-y divide-gray-800">
            <% products.forEach(product => { %>
              <tr>
                <td class="px-6 py-4"><%= product.productName %></td>
                <td class="px-6 py-4">â‚¹<%= product.price.toLocaleString() %></td>
                <td class="px-6 py-4">
                  <form action="/admin/update-stock/<%= product._id %>" method="POST">
                    <input name="stock" type="number" value="<%= product.stock %>" class="w-16 px-2 py-1 rounded bg-gray-800 text-white border border-gray-600">
                    <button type="submit" class="text-sm text-blue-400 hover:underline ml-2">Update</button>
                  </form>
                </td>
                <td class="px-6 py-4"><%= product.categoriesId.name %></td>
                <td class="px-6 py-4 flex space-x-2">
                  <a href="/admin/edit-product/<%= product._id %>" class="bg-green-500 hover:bg-green-600 text-white font-semibold px-4 py-2 rounded transition">Edit</a>
                  <button onclick="confirmDelete('<%= product._id %>')" class="bg-red-500 hover:bg-red-600 text-white font-semibold px-4 py-2 rounded transition">Remove</button>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <!-- Pagination -->
      <div class="flex justify-between items-center mt-6">
        <a href="?page=<%= currentPage - 1 %>" class="bg-white text-black px-4 py-2 rounded hover:bg-gray-300 transition <%= currentPage === 1 ? 'opacity-50 pointer-events-none' : '' %>">Previous</a>
        <div class="space-x-2">
          <% for (let i = 1; i <= totalPages; i++) { %>
            <a href="?page=<%= i %>" class="w-8 h-8 inline-flex items-center justify-center rounded-full <%= i === currentPage ? 'bg-white text-black' : 'border border-white' %>"><%= i %></a>
          <% } %>
        </div>
        <a href="?page=<%= currentPage + 1 %>" class="bg-white text-black px-4 py-2 rounded hover:bg-gray-300 transition <%= currentPage === totalPages ? 'opacity-50 pointer-events-none' : '' %>">Next</a>
      </div>

      <!-- Add Product Button -->
      <div class="text-center mt-8">
        <button onclick="toggleModal()" class="inline-block bg-white text-black px-6 py-3 rounded-full shadow hover:bg-gray-300 transition font-semibold">Add new Product</button>
      </div>
    </main>
  </div>

  <!-- Add Product Modal -->
  <div id="productModal" class="fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 hidden" onclick="closeOnOutside(event)">
    <div class="bg-black border-2 border-blue-500 rounded-xl w-full max-w-4xl p-10 relative" onclick="event.stopPropagation()">
      <div class="flex justify-between items-center mb-6">
        <h2 class="text-white text-2xl font-semibold">Add New Product</h2>
        <button onclick="toggleModal()" class="text-white text-2xl font-bold">&times;</button>
      </div>
      <form id="addProductForm" enctype="multipart/form-data">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="space-y-4">
            <div>
              <label class="block text-sm text-white">Product Name</label>
              <input type="text" name="productName" class="w-full rounded-full px-4 py-2 bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500">
            </div>
            <div>
              <label class="block text-sm text-white">Category</label>
              <select name="categoriesId" class="w-full rounded-full px-4 py-2 bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500">
                <option value="">Select a category</option>
                <% categories.forEach(category => { %>
                  <option value="<%= category._id %>"><%= category.name %></option>
                <% }) %>
              </select>
            </div>
            <div>
              <label class="block text-sm text-white">Price</label>
              <input type="number" name="price" class="w-full rounded-full px-4 py-2 bg-gray-800 text-white border border-gray-600">
            </div>
            <div>
              <label class="block text-sm text-white">Stock</label>
              <input type="number" name="stock" class="w-full rounded-full px-4 py-2 bg-gray-800 text-white border border-gray-600">
            </div>
            <div>
              <label class="block text-sm text-white">Color</label>
              <input type="text" name="color" class="w-full rounded-full px-4 py-2 bg-gray-800 text-white border border-gray-600">
            </div>
          </div>

          <div class="space-y-4">
            <div>
              <input type="file" id="imageInput" accept="image/*" class="w-full px-4 py-2 bg-gray-800 text-white border border-gray-600 rounded-xl">
              <div id="imagePreview" class="flex gap-4 mt-4 flex-wrap"></div>
            </div>
            <div>
              <label class="block text-sm text-white">Description</label>
              <textarea name="description" rows="4" class="w-full rounded-xl px-4 py-2 bg-gradient-to-r from-gray-700 to-gray-500 text-white border border-gray-600"></textarea>
            </div>
          </div>
        </div>
        <div class="text-center mt-8">
          <button type="submit" class="bg-white text-black px-6 py-3 rounded-full font-semibold hover:bg-gray-300 transition">Add Product</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Image Crop Modal -->
  <div id="cropModal" class="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50 hidden">
    <div class="bg-white p-6 rounded-xl w-full max-w-xl">
      <div class="flex justify-between items-center mb-4">
        <h2 class="text-xl font-bold">Crop Image</h2>
        <button onclick="closeCropModal()" class="text-black text-2xl font-bold">&times;</button>
      </div>
      <div class="w-full h-96">
        <img id="cropImage" class="max-h-full w-full object-contain" />
      </div>
      <div class="text-center mt-4">
        <button onclick="cropAndSave()" class="bg-blue-500 text-white px-6 py-2 rounded-full">Crop & Save</button>
      </div>
    </div>
  </div>

  <script>
    function confirmDelete(productId) {
      Swal.fire({
        title: 'Are you sure?',
        text: 'You won\'t be able to revert this!',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/delete-product/${productId}`, {
            method: 'DELETE'
          })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              Swal.fire('Deleted!', 'Product has been deleted.', 'success').then(() => {
                window.location.reload();
              });
            } else {
              Swal.fire('Error!', 'Something went wrong.', 'error');
            }
          });
        }
      });
    }
  
    function toggleModal() {
      const modal = document.getElementById('productModal');
      modal.classList.toggle('hidden');
    }
  
    function closeOnOutside(event) {
      if (event.target.id === 'productModal') {
        toggleModal();
      }
    }
  
    const form = document.getElementById('addProductForm');
  
    form.addEventListener('submit', async function (e) {
      e.preventDefault();
  
      const formData = new FormData(form);
  
      try {
        const response = await fetch('/admin/add-product', {
          method: 'POST',
          body: formData
        });
  
        const data = await response.json();
  
        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: data.message || 'Product added successfully!',
          }).then(() => {
            form.reset();
            toggleModal();
            location.reload();
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message || 'Something went wrong!',
          });
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Unexpected error occurred.',
        });
      }
    });
  
  
  
    let cropper;
  let croppedImages = [];
  
  const imageInput = document.getElementById('imageInput');
  const imagePreview = document.getElementById('imagePreview');
  const cropModal = document.getElementById('cropModal');
  const cropImage = document.getElementById('cropImage');
  
  imageInput.addEventListener('change', () => {
  const file = imageInput.files[0];
  if (!file) return;
  
  if (croppedImages.length >= 3) {
    Swal.fire('Limit Reached', 'You can upload only 3 images.', 'warning');
    imageInput.value = '';
    return;
  }
  
  const reader = new FileReader();
  reader.onload = function (e) {
    cropImage.src = e.target.result;
    openCropModal();
  };
  reader.readAsDataURL(file);
  });
  
  function openCropModal() {
  cropModal.classList.remove('hidden');
  cropper = new Cropper(cropImage, {
    aspectRatio: 1,
    viewMode: 1,
    autoCropArea: 1,
  });
  }
  
  function closeCropModal() {
  cropModal.classList.add('hidden');
  if (cropper) {
    cropper.destroy();
    cropper = null;
  }
  imageInput.value = '';
  }
  
  function cropAndSave() {
  const canvas = cropper.getCroppedCanvas({
    width: 300,
    height: 300,
  });
  
  canvas.toBlob(blob => {
    const url = URL.createObjectURL(blob);
  
    // Save blob to be sent on form submit
    croppedImages.push(blob);
  
    // Display preview
    const img = document.createElement('img');
    img.src = url;
    img.className = 'w-24 h-24 object-cover rounded-lg border border-gray-500';
    imagePreview.appendChild(img);
  
    // Close modal
    closeCropModal();
  }, 'image/jpeg');
  }
  
  </script>
  <!-- Include JavaScript logic for modal, cropper, form submission, and deletion -->
  
</body>
</html>



